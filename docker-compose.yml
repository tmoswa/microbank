services:
  eureka-server:
    image: eurekaserver:latest
    build:
      context: ./services/eureka-server
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    networks:
      - microbank-network

  client-service:
    build:
      context: ./services/client-service
      dockerfile: Dockerfile
    ports:
      - "8088:8080"
    depends_on:
      eureka-server:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_started
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/microbank
      - SPRING_DATASOURCE_USERNAME=user
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_RABBITMQ_HOST=rabbitmq
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka
    networks:
      - microbank-network

  banking-service:
    build:
      context: ./services/banking-service
      dockerfile: Dockerfile
    ports:
      - "8089:8080"
    depends_on:
      eureka-server:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_started
    restart: on-failure
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/microbank
      - SPRING_DATASOURCE_USERNAME=user
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_RABBITMQ_HOST=rabbitmq
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka
    networks:
      - microbank-network

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - microbank-network
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 10s
      timeout: 10s
      retries: 5

  db:
    image: postgres:16
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: microbank
    ports:
      - "5433:5432"
    networks:
      - microbank-network

  client-ui:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "5173:80"
    networks:
      - microbank-network

  nginx:
    image: nginx:alpine
    ports:
      - "8090:8090"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - client-service
      - banking-service
      - client-ui
    networks:
      - microbank-network

volumes:
  rabbitmq_data:

networks:
  microbank-network:
    driver: bridge
